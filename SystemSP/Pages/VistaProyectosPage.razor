@inject ProjectsApplication _seviceProject;
@page "/VistaProyectos/{IdProject:int}";
@page "/VistaProyectos";
<section style="background-color: #f3f2f1">
    <ListaCategorias></ListaCategorias>
    <DatosProyecto ProjectInfo="_pProjectInfo"></DatosProyecto>
    <CardProyectos TipoMenu="PgVista" GetIdProject="_getIdProject"></CardProyectos>
    <section>
        <div class="elementsVista">
            <div class="tituloMs">
                <div class="colorDesc">
                </div>
                <div style="margin-left: 30px;">
                    <p>Mira las solicitudes de creadas por las empresas</p>
                    <TooltipApp MensajeToolTip="Las solicitudes son requerimientos de proyectos formativos creados por las empresas"></TooltipApp>
                </div>
            </div>
        </div>
        <div class="divDataProject">
            <VistaSolicitudes></VistaSolicitudes>
        </div>
    </section>
</section>
<FooterContacto></FooterContacto>
@code {
    [Parameter]
    public int IdProject { get; set; }

    private  ProjectInformation _pProjectInfo { get; set; }
    = new ProjectInformation()
    {
        ImagesProject = new List<string>(),
        ProjectCardInfo = new ProjectCard()
    };

    private async Task _getIdProject(int idProj)
    {
        _pProjectInfo = await _seviceProject.GetProject(idProj);
    }
    protected override async Task OnInitializedAsync()
    {
        if (IdProject != 0)
            _pProjectInfo = await _seviceProject.GetProject(IdProject);
        else
            _pProjectInfo = await _seviceProject.GetProject(1);
    }
}
