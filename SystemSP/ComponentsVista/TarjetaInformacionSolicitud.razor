@inject I18nText serviceTranslator;
<section class="sectionSolicitud">
    <SliderImage Images="@Request.ImagesUrl"></SliderImage>
    <div class="sectionDetalles">
        <div>
            <h3 class="tituloSolicitud">@Request.RequestName</h3>
            <p class="tituloSolicitud">@Request.RequestDescription</p>

        </div>
        <div class="disFlexJsutify">
            <a href="#" class="colorA">Ver más!</a>
            <div>
                <button class="colorVista">@_txtViewPage.TextSeeContact</button>
            </div>
        </div>
    </div>
    <div class="descripcionOpciones">
        <div class="letterPerson">
            <label class="namePerson">@_inicialLetter</label>
        </div>
        <p class="colorStyle">@Request.UserName</p>
        <ol style=" padding: 0;">
            <li>
                <label>Departamento</label>
                <p class="tituloSolicitud">@Request.Departament</p>
            </li>
            <li>
                <label>Ciudad</label>
                <p class="tituloSolicitud">@Request.City</p>
            </li>
            <li>
                <label>Fecha de publicación</label>
                <p class="tituloSolicitud">@Request.DatePublish</p>
            </li>
        </ol>
    </div>
</section>

@code {
    [Parameter]
    public RequestData Request { get; set; } = new RequestData
    {
        ImagesUrl = new List<string>()
    };

    private string _inicialLetter = "";

    TextViewPage _txtViewPage = new TextViewPage();
    protected override async Task OnInitializedAsync()
    {
        _txtViewPage = await serviceTranslator.GetTextTableAsync<TextViewPage>(this);
    }
    protected override void OnParametersSet()
    {
        var arrLetter = Request.UserName.Split(' ');
        _inicialLetter = $"{arrLetter[0][0]} {arrLetter[1][0]}";
    }
}
