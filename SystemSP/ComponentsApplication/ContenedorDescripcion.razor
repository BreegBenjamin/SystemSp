@inject I18nText translator;
<div class="contenedor-descripcion">
    <div>
        <button class="bt-back botonesSlider" @onclick="_moverTarjetaIzquierda"></button>
    </div>
    @for (; _count < _lsDescription.Count; _count++)
    {
        <DescripcionAyudaUsuario Descripcion="@_lsDescription[_count].Descripcion"
                                 Image="@_lsDescription[_count].Image"
                                 Tittle="@_lsDescription[_count].Tittle">
        </DescripcionAyudaUsuario>
     }
    <div>
        <button class="bt-next botonesSlider" @onclick="_moverTarjetasDerecha"></button>
    </div>
</div>
@code {
    private List<EDescripcionData> _lsDescription = new List<EDescripcionData>();
    private int _count = 0;
    private TextIndexSoftware _txtSoftware = new TextIndexSoftware();
    protected override async Task OnInitializedAsync()
    {
        _txtSoftware = await translator.GetTextTableAsync<TextIndexSoftware>(this);
        _count = 0;
        _setDataListDescription();
    }
    private void _moverTarjetaIzquierda()
    {
        if (_count < _lsDescription.Count - 1)
            _count++;
        else
            _count = 0;
    }
    private void _moverTarjetasDerecha()
    {
        if (_count == 0)
            _count = _lsDescription.Count - 1;
        else
            _count--;
    }
    private void _setDataListDescription()
    {
        _lsDescription.Add(new EDescripcionData()
        {
            Tittle = _txtSoftware.OpenSourceTitle,
            Descripcion = _txtSoftware.OpenSourceDescription,
            Image = "ar.svg"
        });
        _lsDescription.Add(new EDescripcionData()
        {
            Tittle = "titulo 2",
            Descripcion = "texto2",
            Image = "ar.svg"
        });
    }
}
