@inject I18nText TraductorService;
@inject IJSRuntime JsRun;
<section>
    <EditForm Model="ProjectApp">
        <div class="divFlex">
            <label for="nombreSena">
                @_txtPublicar.SenaHeadquartes
            <span style="color:#ED0000">*</span>
        </label>
        <InputText @bind-Value="ProjectApp.SenaName"
                   @onfocusout="validaCampo" MaxLength="40" class="inpuNombreSena"></InputText>
    </div>
        <div>
            <div class="dataOpcional">
                <p>@_txtPublicar.ApprenticesData</p>
                <TooltipApp MensajeToolTip="@_txtPublicar.TeamMS"></TooltipApp>
            </div>
            <ol>
                <li>
                    <div>
                        <label>@_txtPublicar.ApprenticeName</label>
                        <input type="text" @bind="_apprentice.FirstName" class="inputFormAprendiz" />
                    </div>
                    <div>
                        <label>@_txtPublicar.ApprenticeLastName</label>
                        <input type="text" @bind="_apprentice.LastName" class="inputFormAprendiz" />
                    </div>
                </li>
                <li>
                    <div>
                        <label>@_txtPublicar.Telephone</label>
                        <input type="text" @bind="_apprentice.Telephone" class="inputFormAprendiz" />
                    </div>
                    <div>
                        <label>@_txtPublicar.AprendiceEmail</label>
                        <input type="text" @bind="_apprentice.Email" class="inputFormAprendiz" />
                    </div>
                </li>
                <li style="padding:20px 0">
                    <button type="button" class="@BotonPublicar"
                            @onclick="_addApprentice">
                        @_txtPublicar.BottonAddMembers
                    </button>
                </li>
                <li>
                    <BotonesAdjuntarArchivos></BotonesAdjuntarArchivos>
                </li>
                <li>
                    <!--Botones aciones-->
                    <div class="disBotones">
                        <button type="button" class="BotonPublicarProyecto">@_txtPublicar.BottonBack</button>
                        <button class="@_classBotones" type="submit"
                                disabled="@continuarDis" @onclick="_handlerValidSubmit">
                            @_txtPublicar.BottonContinue
                        </button>
                    </div>
                </li>
            </ol>
        </div>
    </EditForm>
</section>

@code {
    [CascadingParameter]
    public FormProjectApp ProjectApp { get; set; }
    [Parameter]
    public EventCallback<int> FormValid { get; set; }

    private TextPublicarPage _txtPublicar = new TextPublicarPage();
    private ApprenticeData _apprentice = new ApprenticeData();
    private string _classBotones = "PublicarProyecto-Unlock";
    private bool continuarDis = true;
    private string BotonPublicar = "BtPublicarAprendiz";

    private void validaCampo()
    {
        if (!string.IsNullOrEmpty(ProjectApp.SenaName))
        {
            _classBotones = "BotonPublicarProyecto";
            continuarDis = false;
        }
    }
    private async Task _addApprentice()
    {
        if (ProjectApp.ApprenticesData.Count < 3)
        {
            ProjectApp.ApprenticesData.Add(_apprentice);
        }
        else
        {
            BotonPublicar = "PublicarProyecto-Unlock";
        }
        await JsRun.EjecutarJavaScriptFunc("seetAlert.SweetMensajeAprendiz", _txtPublicar.MessageAddAprendice);
    }

    private async Task _handlerValidSubmit()
    {
        await FormValid.InvokeAsync(2);
    }
    protected override async Task OnInitializedAsync()
    {
        _txtPublicar = await TraductorService.GetTextTableAsync<TextPublicarPage>(this);
        base.OnInitialized();
    }
}
